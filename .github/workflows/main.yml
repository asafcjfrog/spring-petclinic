name: Build Spring PetClinic with JFrog CLI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Step 2: Setup JFrog CLI
      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: https://${{ vars.JF_URL }}/
          #JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          JFROG_CLI_LOG_LEVEL: DEBUG
          JF_PROJECT: jobsummary
          # Basic authentication credentials
          JF_USER: ${{ secrets.JF_USER }}
          JF_PASSWORD: ${{ secrets.JF_PASSWORD }}

      # Step 3: Set up JDK 17 for the project
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'

#      # Step 4: Cache Maven dependencies
#      - name: Cache Maven dependencies
#        uses: actions/cache@v3
#        with:
#          path: ~/.m2/repository
#          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
#          restore-keys: |
#            ${{ runner.os }}-maven-

      # Step 6: Configure Maven with JFrog CLI (jfrog rt mvn-config)
      - name: Configure Maven with JFrog CLI
        run: |
          jf rt mvn-config --repo-resolve-releases=petclinic-libs-release \
                           --repo-resolve-snapshots=petclinic-libs-snapshot \
                           --repo-deploy-releases=petclinic-libs-release \
                           --repo-deploy-snapshots=petclinic-libs-snapshot 

      # Step 4: Build the project with Maven
      - name: Build with Maven
        run: jf mvn clean install

      # Step 7: Upload Maven artifacts to JFrog Artifactory
      - name: Upload Maven artifacts to JFrog Artifactory
        run: |
          jfrog rt mvn "clean install" spring-petclinic-maven-repo --build-name="spring-petclinic-build" --build-number=${{ github.run_number }}

      # Step 8: Publish the build info to JFrog Artifactory
      - name: Publish build info to JFrog Artifactory
        run: |
          jfrog rt build-publish spring-petclinic-build ${{ github.run_number }}
